{"version":3,"file":"ngfire-tokens.mjs","sources":["../../../../libs/ngfire/tokens/src/index.ts","../../../../libs/ngfire/tokens/src/ngfire-tokens.ts"],"sourcesContent":["import { inject, InjectionToken } from \"@angular/core\";\nimport type { Functions, getFunctions } from \"firebase/functions\";\nimport type { FirebaseStorage, getStorage } from \"firebase/storage\";\nimport type { FirebaseApp, FirebaseAppSettings, FirebaseOptions, initializeApp } from 'firebase/app';\nimport type { Auth, Dependencies, initializeAuth } from \"firebase/auth\";\nimport type { Firestore, FirestoreSettings, initializeFirestore } from 'firebase/firestore';\nimport type { Database, getDatabase } from \"firebase/database\";\nimport type { Analytics, AnalyticsSettings, initializeAnalytics } from \"firebase/analytics\";\n\n\nexport interface FirebaseConfig {\n  options: FirebaseOptions,\n  app?: (...params: Parameters<typeof initializeApp>) => FirebaseApp,\n  firestore?: (...params: Parameters<typeof initializeFirestore>) => Firestore,\n  auth?: (...params: Parameters<typeof initializeAuth>) => Auth,\n  storage?: (...params: Parameters<typeof getStorage>) => FirebaseStorage,\n  functions?: (...params: Parameters<typeof getFunctions>) => Functions,\n  database?: (...params: Parameters<typeof getDatabase>) => Database,\n  analytics?: (...params: Parameters<typeof initializeAnalytics>) => Analytics,\n}\nexport const FIREBASE_APP_SETTINGS = new InjectionToken<FirebaseAppSettings>('FirebaseApp Configuration');\nexport const FIREBASE_CONFIG = new InjectionToken<FirebaseConfig>('Firebase Config');\nexport const REGION_OR_DOMAIN = new InjectionToken<string>('Firebase cloud functions region or domain');\nexport const FIRESTORE_SETTINGS = new InjectionToken<FirestoreSettings>('Firestore settings');\nexport const ANALYTICS_SETTINGS = new InjectionToken<AnalyticsSettings>('Analytics settings');\nexport const STORAGE_BUCKET = new InjectionToken<string>('The gs:// url to your Firebase Storage Bucket.');\nexport const DB_URL = new InjectionToken<string>('The URL of the Realtime Database instance to connect to');\nexport const AUTH_DEPS = new InjectionToken<Dependencies>('The dependencies that can be used to initialize an Auth instance.');\n\n\nexport function getConfig() {\n  try {\n    return inject(FIREBASE_CONFIG);\n  } catch (err) {\n    const message= `You should add FIREBASE_CONFIG token to you root module providers (probably AppModule).\nExample:\n  \n@NgModule({\n  declarations: [...],\n  imports: [...],\n  providers: [{ provide: FIREBASE_CONFIG, useValue: environment.firebase }] <--- Add this\n  ...\n})\n\nOriginal message: ${(err as Error).message}`;\n    throw new Error(message);\n  }\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;MAoBa,qBAAqB,GAAG,IAAI,cAAc,CAAsB,2BAA2B,EAAE;MAC7F,eAAe,GAAG,IAAI,cAAc,CAAiB,iBAAiB,EAAE;MACxE,gBAAgB,GAAG,IAAI,cAAc,CAAS,2CAA2C,EAAE;MAC3F,kBAAkB,GAAG,IAAI,cAAc,CAAoB,oBAAoB,EAAE;MACjF,kBAAkB,GAAG,IAAI,cAAc,CAAoB,oBAAoB,EAAE;MACjF,cAAc,GAAG,IAAI,cAAc,CAAS,gDAAgD,EAAE;MAC9F,MAAM,GAAG,IAAI,cAAc,CAAS,yDAAyD,EAAE;MAC/F,SAAS,GAAG,IAAI,cAAc,CAAe,mEAAmE,EAAE;SAG/G,SAAS,GAAA;IACvB,IAAI;AACF,QAAA,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;AAChC,KAAA;AAAC,IAAA,OAAO,GAAG,EAAE;AACZ,QAAA,MAAM,OAAO,GAAE,CAAA;;;;;;;;;;oBAUE,GAAa,CAAC,OAAO,CAAA,CAAE,CAAC;AACzC,QAAA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1B,KAAA;AACH;;AC/CA;;AAEG;;;;"}