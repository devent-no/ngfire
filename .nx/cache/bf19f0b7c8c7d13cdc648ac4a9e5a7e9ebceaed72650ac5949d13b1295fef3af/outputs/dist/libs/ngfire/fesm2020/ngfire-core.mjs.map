{"version":3,"file":"ngfire-core.mjs","sources":["../../../../libs/ngfire/core/src/operators.ts","../../../../libs/ngfire/core/src/utils.ts","../../../../libs/ngfire/core/src/zone.ts","../../../../libs/ngfire/core/src/ngfire-core.ts"],"sourcesContent":["import {\n  combineLatest,\n  Observable,\n  OperatorFunction,\n  of,\n  from,\n  ReplaySubject,\n  timer,\n} from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, tap, share } from 'rxjs/operators';\n\n\nexport function shareWithDelay<T>(delay: number = 100) {\n  return share<T>({\n    connector: () => new ReplaySubject(1),\n    resetOnRefCountZero: () => delay ? timer(delay) : of(true),\n    resetOnError: true,\n    resetOnComplete: false,\n  })\n}\n\n\ntype QueryMap<T> = Record<string, (data: Entity<T>) => any>\ntype Entity<T> = T extends Array<infer I> ? I : T;\ntype GetSnapshot<F extends (...data: any) => any> = \n  F extends (...data: any) => Observable<infer I> ? I\n  : F extends (...data: any) => Promise<infer J> ? J\n  : ReturnType<F>;\ntype Join<T, Query extends QueryMap<T>> = T & { [key in keyof Query]?: GetSnapshot<Query[key]> };\ntype Jointure<T, Query extends QueryMap<any>> = T extends Array<infer I>\n  ? Join<I, Query>[]\n  : Join<T, Query>;\n\ninterface JoinWithOptions {\n  /** If set to false, the subqueries will be filled with undefined and hydrated as they come through */\n  shouldAwait?: boolean;\n  /** Used to not trigger change detection too often */\n  debounceTime?: number;\n}\n\n/**\n * Operator that join the source with sub queries.\n * There are two stategies : \n * 1. `shouldAwait: true`: Await all subqueries to emit once before emitting a next value\n * 2. `shouldAwait: false`: Emit the source and hydrate it with the subqueries along the way\n * @example\n * ```typescript\n * of({ docUrl: '...' }).valueChanges().pipe(\n *   joinWith({\n *     doc: source => fetch(docUrl).then(res => res.json()),\n *   }, { shouldAwait: true })\n * ).subscribe(res => console.log(res.subQuery))\n * ```\n * @param queries A map of subqueries to apply. Each query can return a static value, Promise or Observable\n * @param options Strategy to apply on the joinWith\n */\nexport function joinWith<T, Query extends QueryMap<T>>(queries: Query, options: JoinWithOptions = {}): OperatorFunction<T, Jointure<T, Query>> {\n  const shouldAwait = options.shouldAwait ?? true;\n  const debounce = options.debounceTime ?? 100;\n  const runQuery = (entity: Entity<T>) => {\n    const obs = [];\n    for (const key in queries) {\n      // Transform return value into an observable\n      let result: any = queries[key](entity);\n      if (!(result instanceof Observable)) {\n        if (result instanceof Promise) {\n          result = from(result);\n        } else {\n          result = of(result);\n        }\n      }\n      // Hydrate the entity with the data\n      let observe: Observable<any>;\n      if (shouldAwait) {\n        observe = result.pipe(\n          tap(result => (entity as any)[key] = result),\n        );\n      } else {\n        observe = result.pipe(\n          startWith(undefined),\n          tap(result => (entity as any)[key] = result),\n        );\n      }\n      obs.push(observe);\n    }\n    if (!obs.length) return of(entity);\n    return combineLatest(obs).pipe(\n      map(() => {\n        if (!entity) return entity;\n        return JSON.parse(JSON.stringify(entity), jsonDateReviver) as any;\n      }),\n    );\n  }\n\n  return switchMap((data: T) => {\n    if (Array.isArray(data)) {\n      if (!data.length) return of([]);\n      return combineLatest(data.map(runQuery)).pipe(debounceTime(debounce));\n    }\n    return runQuery(data as Entity<T>);\n  });\n}\n\nfunction jsonDateReviver(_: unknown, value: any) {\n  if (!value) return value;\n\n  const dateFormat = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,}|)Z$/;\n  if (typeof value === 'string' && dateFormat.test(value)) return new Date(value);\n  if (\n    typeof value === 'object' &&\n    Object.keys(value).length === 2 &&\n    ['nanoseconds', 'seconds'].every((k) => k in value)\n  )\n    return new Date(((value.nanoseconds * 1) ^ -6) + value.seconds * 1000);\n\n  return value;\n}\n","import type { CollectionReference, DocumentReference, Query } from \"firebase/firestore\";\nimport { Params } from \"./types\";\n\nexport function exist<D>(doc: D | undefined | null): doc is D {\n  return doc !== undefined && doc !== null;\n}\n\nexport function isNotUndefined<D>(doc: D | undefined): doc is D {\n  return doc !== undefined;\n}\n\n\n//////////\n// PATH //\n//////////\nexport function isDocPath(path: string) {\n  return path.split('/').length % 2 === 0;\n} \n\n// Check if a string is a full path\nexport function isPathRef(path?: any): path is string {\n  return !!((typeof path === \"string\") && (path.split('/').length > 1) && !path.includes(':'));\n}\n\nexport function isIdList(idsOrQuery: any[]): idsOrQuery is string[] {\n  return (idsOrQuery as any[]).every(id => typeof id === 'string');\n}\n\n/** Get the params from a path */\nexport function getPathParams(path: string) {\n  return path\n    .split('/')\n    .filter((segment) => segment.charAt(0) === ':')\n    .map((segment) => segment.substring(1));\n}\n\n\nexport function assertPath(path: string) {\n  for (const segment of path.split('/')) {\n    if (segment.charAt(0) === ':') {\n      const key = segment.substring(1);\n      throw new Error(`Required parameter ${key} from ${path} has not been provided`);\n    }\n  }\n}\n\nexport function assertCollection(path: string) {\n  if (isDocPath(path)) {\n    throw new Error(`Expected collection path but got: ${path}`);\n  }\n}\n\n/**\n * Transform a path based on the params\n * @param path The path with params starting with \"/:\"\n * @param params A map of id params\n * @example pathWithParams('movies/:movieId/stakeholder/:shId', { movieId, shId })\n */\nexport function pathWithParams(path: string, params?: Params): string {\n  if (!params) return path;\n  if (!path.includes(':')) return path;\n  return path\n    .split('/')\n    .map((segment) => {\n      if (segment.charAt(0) === ':') {\n        const key = segment.substr(1);\n        return params[key] || segment;\n      } else {\n        return segment;\n      }\n    })\n    .join('/');\n}\n\n////////////////\n// REFERENCES //\n////////////////\nexport function isQuery<E>(ref: CollectionReference<E> | DocumentReference<E> | Query<E>): ref is Query<E> {\n  return ref.type === 'query';\n}\nexport function isCollectionRef<E>(ref: CollectionReference<E> | DocumentReference<E> | Query<E>): ref is CollectionReference<E> {\n  return ref.type === 'collection';\n}","import { NgZone } from \"@angular/core\";\nimport { SchedulerAction, SchedulerLike, queueScheduler, Subscription, Observable, Subscriber, TeardownLogic, Operator, asyncScheduler } from \"rxjs\";\nimport { observeOn, subscribeOn, tap } from \"rxjs/operators\";\n\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: Zone, private delegate: SchedulerLike = queueScheduler) {}\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function(this: SchedulerAction<any>, state: any) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    };\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nclass BlockUntilFirstOperator<T> implements Operator<T, T> {\n  private task: MacroTask | null = null;\n\n  constructor(private zone: NgZone) {}\n\n  call(subscriber: Subscriber<T>, source: Observable<T>): TeardownLogic {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n\n    return source.pipe(\n      tap({ next: unscheduleTask, complete: unscheduleTask, error: unscheduleTask })\n    ).subscribe(subscriber).add(unscheduleTask);\n  }\n\n  private unscheduleTask() {\n    // maybe this is a race condition, invoke in a timeout\n    // hold for 10ms while I try to figure out what is going on\n    setTimeout(() => {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }, 10);\n  }\n}\n\n\nexport function keepUnstableUntilFirst(ngZone: NgZone) {\n  return <T>(obs$: Observable<T>): Observable<T> => {\n    obs$ = obs$.lift(\n      new BlockUntilFirstOperator(ngZone)\n    );\n\n    return obs$.pipe(\n      // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n      subscribeOn(ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current))),\n      // Run operators inside the angular zone (e.g. side effects via tap())\n      observeOn(ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler))),\n    );\n  }\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}