import { inject, InjectFlags, InjectionToken } from "@angular/core";
import { getFunctions } from "firebase/functions";
import { FIREBASE_APP } from "ngfire/app";
import { getConfig, REGION_OR_DOMAIN } from "ngfire/tokens";
export const CLOUD_FUNCTIONS = new InjectionToken('Firebase cloud functions', {
    providedIn: 'root',
    factory: () => {
        const config = getConfig();
        const regionOrDomain = inject(REGION_OR_DOMAIN, InjectFlags.Optional);
        const app = inject(FIREBASE_APP);
        if (config.functions) {
            return config.functions(app, regionOrDomain ?? undefined);
        }
        else {
            return getFunctions(app, regionOrDomain ?? undefined);
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ2ZpcmUvZnVuY3Rpb25zL3NyYy90b2tlbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBYSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLElBQUksY0FBYyxDQUFZLDBCQUEwQixFQUFFO0lBQ3ZGLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDWixNQUFNLE1BQU0sR0FBRyxTQUFTLEVBQUUsQ0FBQztRQUMzQixNQUFNLGNBQWMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RFLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNqQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNyQixPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLGNBQWMsSUFBSSxTQUFTLENBQUMsQ0FBQztRQUM1RCxDQUFDO2FBQU0sQ0FBQztZQUNOLE9BQU8sWUFBWSxDQUFDLEdBQUcsRUFBRSxjQUFjLElBQUksU0FBUyxDQUFDLENBQUM7UUFDeEQsQ0FBQztJQUNILENBQUM7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmplY3QsIEluamVjdEZsYWdzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGdW5jdGlvbnMsIGdldEZ1bmN0aW9ucyB9IGZyb20gXCJmaXJlYmFzZS9mdW5jdGlvbnNcIjtcbmltcG9ydCB7IEZJUkVCQVNFX0FQUCB9IGZyb20gXCJuZ2ZpcmUvYXBwXCI7XG5pbXBvcnQgeyBnZXRDb25maWcsIFJFR0lPTl9PUl9ET01BSU4gfSBmcm9tIFwibmdmaXJlL3Rva2Vuc1wiO1xuXG5leHBvcnQgY29uc3QgQ0xPVURfRlVOQ1RJT05TID0gbmV3IEluamVjdGlvblRva2VuPEZ1bmN0aW9ucz4oJ0ZpcmViYXNlIGNsb3VkIGZ1bmN0aW9ucycsIHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICBmYWN0b3J5OiAoKSA9PiB7XG4gICAgY29uc3QgY29uZmlnID0gZ2V0Q29uZmlnKCk7XG4gICAgY29uc3QgcmVnaW9uT3JEb21haW4gPSBpbmplY3QoUkVHSU9OX09SX0RPTUFJTiwgSW5qZWN0RmxhZ3MuT3B0aW9uYWwpO1xuICAgIGNvbnN0IGFwcCA9IGluamVjdChGSVJFQkFTRV9BUFApO1xuICAgIGlmIChjb25maWcuZnVuY3Rpb25zKSB7XG4gICAgICByZXR1cm4gY29uZmlnLmZ1bmN0aW9ucyhhcHAsIHJlZ2lvbk9yRG9tYWluID8/IHVuZGVmaW5lZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBnZXRGdW5jdGlvbnMoYXBwLCByZWdpb25PckRvbWFpbiA/PyB1bmRlZmluZWQpO1xuICAgIH1cbiAgfSxcbn0pO1xuIl19