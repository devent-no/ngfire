{"version":3,"file":"ngfire-functions.mjs","sources":["../../../../libs/ngfire/functions/src/tokens.ts","../../../../libs/ngfire/functions/src/functions.ts","../../../../libs/ngfire/functions/src/ngfire-functions.ts"],"sourcesContent":["import { inject, InjectFlags, InjectionToken } from \"@angular/core\";\nimport { Functions, getFunctions } from \"firebase/functions\";\nimport { FIREBASE_APP } from \"ngfire/app\";\nimport { getConfig, REGION_OR_DOMAIN } from \"ngfire/tokens\";\n\nexport const CLOUD_FUNCTIONS = new InjectionToken<Functions>('Firebase cloud functions', {\n  providedIn: 'root',\n  factory: () => {\n    const config = getConfig();\n    const regionOrDomain = inject(REGION_OR_DOMAIN, InjectFlags.Optional);\n    const app = inject(FIREBASE_APP);\n    if (config.functions) {\n      return config.functions(app, regionOrDomain ?? undefined);\n    } else {\n      return getFunctions(app, regionOrDomain ?? undefined);\n    }\n  },\n});\n","import { inject, Injectable, Injector } from \"@angular/core\";\nimport { httpsCallable, HttpsCallable, HttpsCallableOptions } from \"firebase/functions\";\nimport { CLOUD_FUNCTIONS } from \"./tokens\";\n\n\n@Injectable({ providedIn: 'root' })\nexport class CallableFunctions {\n  private injector = inject(Injector);\n  private callables: Record<string, HttpsCallable> = {};\n\n  protected get function() {\n    return this.injector.get(CLOUD_FUNCTIONS);\n  }\n\n  prepare<I, O>(name: string): (data: I) => Promise<O> {\n    if (!this.callables[name]) {\n      this.callables[name] = httpsCallable(this.function, name);\n    }\n    return (data: I) => this.call(name, data);\n  }\n\n  async call<I, O>(\n    name: string,\n    data: I,\n    options?: HttpsCallableOptions \n  ): Promise<O> {\n    if (!this.callables[name]) {\n      this.callables[name] = httpsCallable(this.function, name, options);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const result = await this.callables[name]!(data);\n    return result.data as any;\n  }\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;MAKa,eAAe,GAAG,IAAI,cAAc,CAAY,0BAA0B,EAAE;AACvF,IAAA,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MAAK;AACZ,QAAA,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;QAC3B,MAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;AACtE,QAAA,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AACjC,QAAA,IAAI,MAAM,CAAC,SAAS,EAAE;YACpB,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,cAAc,IAAI,SAAS,CAAC,CAAC;SAC3D;aAAM;YACL,OAAO,YAAY,CAAC,GAAG,EAAE,cAAc,IAAI,SAAS,CAAC,CAAC;SACvD;KACF;AACF,CAAA;;MCXY,iBAAiB,CAAA;AAD9B,IAAA,WAAA,GAAA;AAEU,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAS,CAAA,SAAA,GAAkC,EAAE,CAAC;AAyBvD,KAAA;AAvBC,IAAA,IAAc,QAAQ,GAAA;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;KAC3C;AAED,IAAA,OAAO,CAAO,IAAY,EAAA;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC3D;AACD,QAAA,OAAO,CAAC,IAAO,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3C;AAED,IAAA,MAAM,IAAI,CACR,IAAY,EACZ,IAAO,EACP,OAA8B,EAAA;QAE9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACpE;;AAED,QAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,MAAM,CAAC,IAAW,CAAC;KAC3B;8GA1BU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cADJ,MAAM,EAAA,CAAA,CAAA,EAAA;;2FACnB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACLlC;;AAEG;;;;"}